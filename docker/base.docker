# BUILD-USING:    docker build -t codaisseur/runner-base .
# TEST-USING:     docker run --rm -i -t --name=test-runner-base --entrypoint=/bin/bash codaisseur/runner-base -s
# RUN-USING:      docker run --rm --name=runner-base codaisseur/runner-base --help

# Pull base image.
FROM buildpack-deps:trusty

RUN apt-get update -qq

# gpg keys listed at https://github.com/nodejs/node
RUN set -ex \
  && for key in \
    9554F04D7259F04124DE6B476D5A82AC7E37093B \
    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
    0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 \
    FD3A5288F042B6850C66B31F09FE44734EB7990E \
    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
    B9AE9905FFD7803F25714661B63B535A4C206CA9 \
    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
  ; do \
    gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
  done

ENV NPM_CONFIG_LOGLEVEL info
ENV NODE_VERSION 5.8.0

# Install NodeJS
RUN curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz" \
  && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
  && grep " node-v$NODE_VERSION-linux-x64.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
  && tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz" -C /usr/local --strip-components=1 \
  && rm "node-v$NODE_VERSION-linux-x64.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt

# Set the env variables to non-interactive
ENV DEBIAN_FRONTEND noninteractive
ENV DEBIAN_PRIORITY critical
ENV DEBCONF_NOWARNINGS yes
ENV TERM linux
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

# ADD codewarrior user
RUN useradd codewarrior
RUN rm -rf ~codewarrior && cp -a ~root ~codewarrior && chown -R codewarrior:codewarrior ~codewarrior

# Define default command.
CMD ["bash"]

# Append any relevant run args as per the help

ENV NODE_ENV production
ENTRYPOINT ["timeout", "15", "node"]

# Install Redis
RUN apt-get install -y redis-server

# Install SQLITE
RUN apt-get install -y sqlite libsqlite3-dev

# Install MongoDB
RUN apt-get install -y mongodb

RUN mkdir /.npm-global
RUN npm config set prefix '/.npm-global'
RUN su codewarrior -c "echo 'export PATH=\"/.npm-global/bin:$PATH\"' >> ~/.profile"
ENV PATH /.npm-global/bin:$PATH

# Install Node testing frameworks & additional frameworks
RUN npm install -g chai mocha

# Install Python Basics
RUN apt-get install -y python-minimal

# Install Git
RUN apt-get -y install git
