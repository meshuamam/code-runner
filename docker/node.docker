# RUN-USING:      docker run --rm --name=node codaisseur/node-runner --help
# EXAMPLE USAGE:  docker run --rm codaisseur/node-runner run -l javascript -c "console.log(1+1)"

# Pull base image.
FROM codaisseur/base-runner

# Install additional libraries
# NOTE: due to this issue https://github.com/npm/npm/issues/9863 we need to install everything at once, which sucks
# because we lose the ability to quickly add new ones as a new layer
# NOTE: we dont configure these via package.json in order to prevent having to re-install them on each code change

# Install Node manager so that we can have multiple versions of node
RUN npm -g install n
RUN n 0.10.33
RUN n 6.0.0

# install TypeScript type definitions
RUN npm install -gq typings

# Install Coffeescript
RUN npm -g install coffee-script

# Install TypeScript
RUN npm -g install typescript

# add the package json first to a tmp directory and build, copy over so that we dont rebuild every time
ADD package.json /tmp/package.json
RUN cd /tmp && npm install && npm install --only=dev && npm dedupe
RUN mkdir -p /runner && cp -a /tmp/node_modules /runner

# ADD cli-runner and install node deps
ADD . /runner

# add typings into a cleaner path for inclusion
ADD typings/main/ambient /runner/typings

WORKDIR /runner
ENV NODE_PATH /usr/lib/node_modules:/runner/node_modules

# Set environment variables
USER codewarrior
ENV USER codewarrior
ENV HOME /home/codewarrior

# Run the test suite to make sure this thing works
RUN mocha -t 5000 test/runners/javascript_spec.js
RUN mocha -t 5000 test/runners/coffeescript_spec.js
RUN mocha -t 7000 test/runners/typescript_spec.js

#timeout is a fallback in case an error with node
#prevents it from exiting properly
ENTRYPOINT ["timeout", "15", "node"]
